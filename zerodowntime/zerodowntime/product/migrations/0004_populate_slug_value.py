# Generated by Django 4.2.1 on 2023-05-15 07:37

from django.db import migrations
from django.utils.text import slugify


def create_unique_slugs_for_products(apps, schema_editor):
    """Create unique slug for Product instances."""
    Product = apps.get_model("product", "Product")
    products_iterator = Product.objects.all().iterator()
    slug_values = list(Product.objects.values_list("slug", flat=True))

    products = []
    for product in products_iterator:
        slug = generate_unique_slug(product, slug_values)
        product.slug = slug
        products.append(products)
        slug_values.append(slug)

    Product.objects.bulk_update(products, ["slug"])


def generate_unique_slug(instance, slug_values_list):
    """Generate unique slug for given instance based on list of existing slug values.

    When the slug generated from the product name already exists, the extension
    is added. E.g. when `juice` slug already exists, the `juice-1` unique slug will
    be returned.
    """
    slug = slugify(instance.name)
    unique_slug = slug

    extension = 1

    while unique_slug in slug_values_list:
        extension += 1
        unique_slug = f"{slug}-{extension}"

    return unique_slug


class Migration(migrations.Migration):
    dependencies = [
        ("product", "0003_product_slug"),
    ]

    operations = [
        migrations.RunPython(
            create_unique_slugs_for_products, migrations.RunPython.noop
        ),
    ]
